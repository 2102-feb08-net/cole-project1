# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-cole'
    organization: '2102-feb08-net'
    scannerMode: 'MSBuild'
    projectKey: '2102-feb08-net_cole-project1'
    projectName: 'Cole-Project1'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml'

- script: dotnet build Cole-Project1/ --configuration $(buildConfiguration)
  displayName: 'Build'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect "xplat code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
    workingDirectory: 'Cole-Project1'


- task: SonarCloudAnalyze@1
  displayName: 'Sonar Cloud Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publishing Sonar Cloud'
  inputs:
    pollingTimeoutSec: '300'

- task: PublishCodeCoverageResults@1
  displayName: publish code coverage report
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet publish
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Cole-Project1/Cole-Project1'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: app service deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(bfc53c2a-f1df-4f29-9467-229c8befca67)'
    appType: 'webApp'
    WebAppName: '2102-cole'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
